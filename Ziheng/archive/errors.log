Sandbox logs:
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {10002: 1, 9996: 2, 9995: 29}, SELL orders {10004: -2, 10005: -29} ||\nRequired spread for AMETHYSTS: 2\nMid price: 10003.0\nEma: 10003.333333333334\nlower: -inf\nupper: inf\n(!!!) Only bid volume low (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\nRequired spread: 2, my quoted spread: 1, difference of: 1\nOld prices are 10002 10003\nOdd spread - new prices are: 10001 10003\n(O.R.S) Modified prices not valid (B,A): 10001 10003\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {5002: 1, 4997: 31}, SELL orders {5003: -31} ||\nRequired spread for STARFRUIT: 1\nMid price: 5002.5\nEma: 5002.96875\nlower: -inf\nupper: inf\n(!!!) Only bid volume low (!!!) \nNo open positions\nOwn trade STARFRUIT: None\nRequired spread: 1, my quoted spread: 0, difference of: 1\nOld prices are 5002 5002\nOdd spread - new prices are: 5001 5002\n(O.R.S) Modified prices not valid (B,A): 5001 5002",
  "timestamp": 0
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9996: 2, 9995: 22}, SELL orders {10004: -2, 10005: -22} ||\nRequired spread for AMETHYSTS: 4\nMid price: 10000.0\nEma: 10001.583333333332\nlower: 9999.083333333332\nupper: 10004.083333333332\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9997, ask 20x 10003\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4997: 24}, SELL orders {5003: -2, 5004: -22} ||\nRequired spread for STARFRUIT: 3\nMid price: 5000.0\nEma: 5000.077463942308\nlower: 4995.947055288461\nupper: 5004.207872596155\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4998, ask 20x 5002",
  "timestamp": 100
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9995: 20}, SELL orders {10005: -20} ||\nRequired spread for AMETHYSTS: 6\nMid price: 10000.0\nEma: 10001.001942825424\nlower: 9998.644920221468\nupper: 10003.35896542938\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9996, ask 20x 10004\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4997: 2, 4996: 20}, SELL orders {5003: -20} ||\nRequired spread for STARFRUIT: 4\nMid price: 5000.0\nEma: 5000.950314022988\nlower: 4997.224595834633\nupper: 5004.676032211343\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4998, ask 20x 5002",
  "timestamp": 200
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9996: 2, 9995: 29}, SELL orders {10004: -2, 10005: -29} ||\nRequired spread for AMETHYSTS: 6\nMid price: 10000.0\nEma: 10000.71269742311\nlower: 9998.54763391365\nupper: 10002.877760932572\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9997, ask 20x 10003\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4996: 31}, SELL orders {5003: -31} ||\nRequired spread for STARFRUIT: 4\nMid price: 4999.5\nEma: 5000.53163078836\nlower: 4997.168301071192\nupper: 5003.894960505529\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4997, ask 20x 5002",
  "timestamp": 300
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9996: 2, 9995: 25}, SELL orders {10004: -2, 10005: -25} ||\nRequired spread for AMETHYSTS: 6\nMid price: 10000.0\nEma: 10000.540301981384\nlower: 9998.540301981384\nupper: 10002.540301981384\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9997, ask 20x 10003\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4995: 27}, SELL orders {5002: -27} ||\nRequired spread for STARFRUIT: 5\nMid price: 4998.5\nEma: 5000.040196589459\nlower: 4996.779604338868\nupper: 5003.30078884005\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4996, ask 20x 5001",
  "timestamp": 400
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9995: 30}, SELL orders {10002: -4, 10005: -30} ||\nRequired spread for AMETHYSTS: 6\nMid price: 9998.5\nEma: 9999.545278419115\nlower: 9996.27980347584\nupper: 10002.81075336239\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9996, ask 20x 10001\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4996: 30}, SELL orders {5003: -30} ||\nRequired spread for STARFRUIT: 5\nMid price: 4999.5\nEma: 4999.926239783861\nlower: 4996.925778939506\nupper: 5002.926700628216\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4997, ask 20x 5002",
  "timestamp": 500
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {10000: 5, 9995: 25}, SELL orders {10005: -25} ||\nRequired spread for AMETHYSTS: 6\nMid price: 10002.5\nEma: 10000.419068549001\nlower: 9996.64398881986\nupper: 10004.194148278142\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\nRequired spread: 6, my quoted spread: 3, difference of: 3\nOld prices are 10001 10004\nOdd spread - new prices are: 9999 10005\n(O.R.S) Quoting AMETHYSTS: bid 20x 9999, ask 20x 10005\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4999: 5, 4997: 6, 4996: 25}, SELL orders {5003: -25} ||\nRequired spread for STARFRUIT: 5\nMid price: 5001.0\nEma: 5000.381361594143\nlower: 4997.358891587854\nupper: 5003.403831600432\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\nRequired spread: 5, my quoted spread: 2, difference of: 3\nOld prices are 5000 5002\nOdd spread - new prices are: 4998 5003\n(O.R.S) Quoting STARFRUIT: bid 20x 4998, ask 20x 5003",
  "timestamp": 600
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9995: 23}, SELL orders {10005: -23} ||\nRequired spread for AMETHYSTS: 6\nMid price: 10000.0\nEma: 10000.346630444574\nlower: 9996.80752047326\nupper: 10003.885740415888\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9996, ask 20x 10004\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4997: 2, 4996: 23}, SELL orders {5003: -23} ||\nRequired spread for STARFRUIT: 5\nMid price: 5000.0\nEma: 5000.751035988805\nlower: 4997.7324792312775\nupper: 5003.769592746332\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4998, ask 20x 5002",
  "timestamp": 700
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9996: 1, 9995: 29}, SELL orders {10004: -1, 10005: -29} ||\nRequired spread for AMETHYSTS: 6\nMid price: 10000.0\nEma: 10000.291029226324\nlower: 9996.94858205472\nupper: 10003.633476397928\n(!!!) Both volume low (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9996, ask 20x 10004\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4997: 30}, SELL orders {5003: -1, 5004: -29} ||\nRequired spread for STARFRUIT: 5\nMid price: 5000.0\nEma: 5000.180397582224\nlower: 4996.899923330594\nupper: 5003.460871833854\n(!!!) Only ask volume low (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4998, ask 20x 5003",
  "timestamp": 800
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9996: 1, 9995: 22}, SELL orders {10004: -1, 10005: -22} ||\nRequired spread for AMETHYSTS: 6\nMid price: 10000.0\nEma: 10000.24720274656\nlower: 9997.071927576619\nupper: 10003.4224779165\n(!!!) Both volume low (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9996, ask 20x 10004\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4997: 23}, SELL orders {5003: -1, 5004: -22} ||\nRequired spread for STARFRUIT: 5\nMid price: 5000.0\nEma: 4999.73910509775\nlower: 4996.343155400477\nupper: 5003.135054795023\n(!!!) Only ask volume low (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4998, ask 20x 5003",
  "timestamp": 900
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9995: 26}, SELL orders {10005: -26} ||\nRequired spread for AMETHYSTS: 7\nMid price: 10000.0\nEma: 10000.211928688306\nlower: 9997.181032303595\nupper: 10003.242825073017\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9996, ask 20x 10004\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4996: 26}, SELL orders {5001: -6, 5003: -26} ||\nRequired spread for STARFRUIT: 5\nMid price: 4998.5\nEma: 4999.33933615185\nlower: 4995.84762932307\nupper: 5002.831042980631\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4997, ask 20x 5000",
  "timestamp": 1000
}
{
  "sandboxLog": "",
  "lambdaLog": "------------------------------AMETHYSTS----------------------------------\n|| AMETHYSTS: BUY orders {9996: 2, 9995: 24}, SELL orders {10004: -2, 10005: -24} ||\nRequired spread for AMETHYSTS: 7\nMid price: 10000.0\nEma: 10000.183058034167\nlower: 9997.278493475018\nupper: 10003.087622593315\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade AMETHYSTS: None\n(MM) Quoting AMETHYSTS: bid 20x 9997, ask 20x 10003\n------------------------------STARFRUIT----------------------------------\n|| STARFRUIT: BUY orders {4998: 6, 4997: 26}, SELL orders {5004: -26} ||\nRequired spread for STARFRUIT: 5\nMid price: 5001.0\nEma: 4999.820993113599\nlower: 4996.227019378007\nupper: 5003.414966849191\n(!!!) Both volume high (!!!) \nNo open positions\nOwn trade STARFRUIT: None\n(MM) Quoting STARFRUIT: bid 20x 4999, ask 20x 5003",
  "timestamp": 1100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"706e0e8c-b28d-40db-a4d9-0a2373135700\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"706e0e8c-b28d-40db-a4d9-0a2373135700\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 1200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ed98790d-a727-4083-abd3-4c05e4c65a21\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ed98790d-a727-4083-abd3-4c05e4c65a21\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 1300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5f49089c-3abd-4b45-85b9-0effb1c68116\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5f49089c-3abd-4b45-85b9-0effb1c68116\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 1400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"47164945-d38a-4613-bc54-be7bc67840e5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"47164945-d38a-4613-bc54-be7bc67840e5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 1500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"dea9e1a9-021d-4352-b912-b526401d7245\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"dea9e1a9-021d-4352-b912-b526401d7245\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 1600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"16e96936-adce-4f19-b910-c61700fcf122\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"16e96936-adce-4f19-b910-c61700fcf122\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 1700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"416ea51a-0d99-4c55-8cc4-64246fa14165\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"416ea51a-0d99-4c55-8cc4-64246fa14165\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 1800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b8f5ab58-45b4-4bf6-8c52-23c7dca84bad\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b8f5ab58-45b4-4bf6-8c52-23c7dca84bad\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 1900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"dae24abb-a8fd-40aa-b199-c4a9374dc216\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"dae24abb-a8fd-40aa-b199-c4a9374dc216\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"087f631e-be18-44f4-a1d3-3808ed2ccb73\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"087f631e-be18-44f4-a1d3-3808ed2ccb73\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f439adb0-3ac5-4ed2-952b-43b27c3a9380\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f439adb0-3ac5-4ed2-952b-43b27c3a9380\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"4e08c36e-d32b-4046-bc6a-082b48e11005\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"4e08c36e-d32b-4046-bc6a-082b48e11005\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"3f5dbaf6-9346-45e8-b7c6-d10a3a91e059\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"3f5dbaf6-9346-45e8-b7c6-d10a3a91e059\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"deab26ef-6660-4394-8cbc-c5e25ffba305\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"deab26ef-6660-4394-8cbc-c5e25ffba305\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6c83db18-e763-46f3-bb97-0de9c6b9c94c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6c83db18-e763-46f3-bb97-0de9c6b9c94c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"03cc444a-0878-49c1-a6db-a98b999b039d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"03cc444a-0878-49c1-a6db-a98b999b039d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d5b72318-312e-4b36-8955-16fc0c9ca5a4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d5b72318-312e-4b36-8955-16fc0c9ca5a4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"87be57ff-a911-4ada-9ffc-c724dac50b4b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"87be57ff-a911-4ada-9ffc-c724dac50b4b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 2900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"094d386a-cb7e-42ae-bc1c-1e2446a67bef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"094d386a-cb7e-42ae-bc1c-1e2446a67bef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"cd5ed9c0-9258-4f72-a1b3-32480498f209\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"cd5ed9c0-9258-4f72-a1b3-32480498f209\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"28aa5aed-d878-458f-ae36-0041ca051be9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"28aa5aed-d878-458f-ae36-0041ca051be9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6530baea-5ec4-47e0-8304-f9e7b1b88373\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6530baea-5ec4-47e0-8304-f9e7b1b88373\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c79d6baa-4f53-411c-9495-e7744f13e8d9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c79d6baa-4f53-411c-9495-e7744f13e8d9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ff5b27ac-8729-4854-a95e-39299eb804e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ff5b27ac-8729-4854-a95e-39299eb804e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d8a44210-501f-4f59-b2f5-cca4694cf9a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d8a44210-501f-4f59-b2f5-cca4694cf9a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5c3daabd-4692-48a4-b0a2-14fd83d248cd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5c3daabd-4692-48a4-b0a2-14fd83d248cd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f156208e-a29f-4d2b-9510-278090f825c6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f156208e-a29f-4d2b-9510-278090f825c6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"743500c5-901a-4a92-bdd8-c94f35c7977a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"743500c5-901a-4a92-bdd8-c94f35c7977a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 3900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"fe0912ba-eecf-46a0-8d66-3dd749e01279\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"fe0912ba-eecf-46a0-8d66-3dd749e01279\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5c4725a3-69c1-4c5d-a0aa-2ce26df53c04\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5c4725a3-69c1-4c5d-a0aa-2ce26df53c04\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6e636c50-c7f4-4916-a7b9-510c8f0bbb83\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6e636c50-c7f4-4916-a7b9-510c8f0bbb83\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7c6aa2df-6b23-4494-bf91-f5f207de8e3f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7c6aa2df-6b23-4494-bf91-f5f207de8e3f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"bc482a3e-ad29-4d81-bb8f-1257cc6b0f65\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"bc482a3e-ad29-4d81-bb8f-1257cc6b0f65\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"186bcf4d-d976-4081-85c7-1ae35112f4dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"186bcf4d-d976-4081-85c7-1ae35112f4dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"29d814f6-ebbd-4887-8f81-fd464a02a873\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"29d814f6-ebbd-4887-8f81-fd464a02a873\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"dd2b0df4-db1d-4077-830f-dccddf8c95ab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"dd2b0df4-db1d-4077-830f-dccddf8c95ab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"52a32e3d-f0e6-4947-b024-962918d10fc0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"52a32e3d-f0e6-4947-b024-962918d10fc0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a2e6aeaf-cc1c-482c-9dd7-dadbd1ab676e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a2e6aeaf-cc1c-482c-9dd7-dadbd1ab676e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 4900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"8d42f66b-ab08-4b76-8c0d-8a773dc7cbd1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"8d42f66b-ab08-4b76-8c0d-8a773dc7cbd1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"34d81362-9314-46ea-83ed-29bbaab4c9c7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"34d81362-9314-46ea-83ed-29bbaab4c9c7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"669e14b8-b4b5-424b-860c-a81eba699f4f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"669e14b8-b4b5-424b-860c-a81eba699f4f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5ecc8204-5bf7-424f-a4c5-b27fce94db1f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5ecc8204-5bf7-424f-a4c5-b27fce94db1f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1de48fc1-74e8-4b5e-99d4-a88f0d8a811b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1de48fc1-74e8-4b5e-99d4-a88f0d8a811b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9209c9a0-fbfc-420b-ace7-fa70b9dbae22\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9209c9a0-fbfc-420b-ace7-fa70b9dbae22\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b30f8324-a66d-450d-9daa-078621548e48\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b30f8324-a66d-450d-9daa-078621548e48\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"74de6ec4-c4f5-4399-9cab-7db74ebe3840\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"74de6ec4-c4f5-4399-9cab-7db74ebe3840\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7532028c-c9fb-484d-8b04-5b395ee61a80\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7532028c-c9fb-484d-8b04-5b395ee61a80\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"830725a2-49e8-407f-91e5-5163ff02b3e4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"830725a2-49e8-407f-91e5-5163ff02b3e4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 5900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"21418f6c-e3d8-493d-a0b8-e6e3fcb108dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"21418f6c-e3d8-493d-a0b8-e6e3fcb108dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f2893ce8-5935-41b1-b469-35c35682f901\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f2893ce8-5935-41b1-b469-35c35682f901\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f3ff2ee5-8d60-4ac9-805f-1917d9c640ce\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f3ff2ee5-8d60-4ac9-805f-1917d9c640ce\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2b116f3f-495d-4e50-9bcc-2ebb59f3b02a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2b116f3f-495d-4e50-9bcc-2ebb59f3b02a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9adb444b-c2c1-4504-ba4e-39216f29dcf3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9adb444b-c2c1-4504-ba4e-39216f29dcf3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"fd444c8d-dfa2-4bb1-bf0a-bbce33bf6cdd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"fd444c8d-dfa2-4bb1-bf0a-bbce33bf6cdd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"19a7f5ce-81e1-4033-910b-ef9bd2435dca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"19a7f5ce-81e1-4033-910b-ef9bd2435dca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ccbf7782-457c-411a-aadd-75f8338493e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ccbf7782-457c-411a-aadd-75f8338493e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"feac4c5d-cda4-4293-a3a4-c4dc8368be68\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"feac4c5d-cda4-4293-a3a4-c4dc8368be68\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"aeeb69c1-4549-4c7d-8dec-5d6e847a3664\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"aeeb69c1-4549-4c7d-8dec-5d6e847a3664\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 6900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"36c8f636-7550-4082-8a66-6298ad60ab7f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"36c8f636-7550-4082-8a66-6298ad60ab7f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"61e6059e-2956-402b-972f-f933e0f1ec67\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"61e6059e-2956-402b-972f-f933e0f1ec67\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e28de825-71d9-47f8-9e17-129caf757adc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e28de825-71d9-47f8-9e17-129caf757adc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"bc50bd19-fa8e-4152-96f3-0dd2dfdfbb68\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"bc50bd19-fa8e-4152-96f3-0dd2dfdfbb68\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"0149d25b-18f6-4a4a-b75e-8bb6376848f8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"0149d25b-18f6-4a4a-b75e-8bb6376848f8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6501c4db-9ca0-4eff-9234-92cd8fa668d6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6501c4db-9ca0-4eff-9234-92cd8fa668d6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2ba1675f-c71e-4eb7-86b6-4aa3c77ca915\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2ba1675f-c71e-4eb7-86b6-4aa3c77ca915\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"56e7dea3-95c3-46fe-a938-01190c3cc5e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"56e7dea3-95c3-46fe-a938-01190c3cc5e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"0c369363-2272-4493-9ff3-2231368e334d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"0c369363-2272-4493-9ff3-2231368e334d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ecd33e88-f61b-4457-ba87-3c5be368878d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ecd33e88-f61b-4457-ba87-3c5be368878d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 7900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"82284248-633c-47bd-9874-61ec153eeb65\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"82284248-633c-47bd-9874-61ec153eeb65\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f36854d7-2c1e-4fe5-96f3-8a0dd5791691\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f36854d7-2c1e-4fe5-96f3-8a0dd5791691\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c8e80ef1-0662-40dd-807a-0e9675cd966a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c8e80ef1-0662-40dd-807a-0e9675cd966a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"8818fa72-7efa-4c26-b16f-38de943fd764\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"8818fa72-7efa-4c26-b16f-38de943fd764\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a926e055-5a4e-4428-a82c-2e7b55ec7c3d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a926e055-5a4e-4428-a82c-2e7b55ec7c3d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"387e01c8-69e0-43fb-afdd-49aa14375fbb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"387e01c8-69e0-43fb-afdd-49aa14375fbb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a97f7974-1d30-431e-ad5a-8aabc5225a4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a97f7974-1d30-431e-ad5a-8aabc5225a4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2227eb8b-1860-41e7-9e41-01e61523c4bf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2227eb8b-1860-41e7-9e41-01e61523c4bf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"861b447a-22e6-4f50-a9dc-415188f50c1e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"861b447a-22e6-4f50-a9dc-415188f50c1e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"41bc466a-fbc3-42e1-828e-b799b0cc7046\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"41bc466a-fbc3-42e1-828e-b799b0cc7046\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 8900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"14ae5736-b756-49f3-874a-bd7d0fa325a9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"14ae5736-b756-49f3-874a-bd7d0fa325a9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1d5576e0-73a8-4e92-b70e-53db11875b5a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1d5576e0-73a8-4e92-b70e-53db11875b5a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2b0ffc4a-0ca4-43d6-9a1d-c624b7af081a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2b0ffc4a-0ca4-43d6-9a1d-c624b7af081a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"39b3dc6b-ce01-4f7b-b863-ef9938928ad0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"39b3dc6b-ce01-4f7b-b863-ef9938928ad0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c3989ef6-76dd-40ea-b3d9-5a329fae8a2e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c3989ef6-76dd-40ea-b3d9-5a329fae8a2e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"296e2403-e8c2-439c-b423-ec8ce6ef0cee\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"296e2403-e8c2-439c-b423-ec8ce6ef0cee\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6811cfe5-b79c-488a-af52-8c4a07172ecb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6811cfe5-b79c-488a-af52-8c4a07172ecb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"368e4423-aa18-4eed-b9a7-585039cf5f3c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"368e4423-aa18-4eed-b9a7-585039cf5f3c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c671a4b1-510e-461a-b3af-9f4bb72b47e4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c671a4b1-510e-461a-b3af-9f4bb72b47e4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"53d3fc00-6d59-4730-8248-845ebe9c1edd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"53d3fc00-6d59-4730-8248-845ebe9c1edd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 9900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1cd868ae-62d2-474e-bddb-65d756866eca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1cd868ae-62d2-474e-bddb-65d756866eca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"79140ecf-e43e-42aa-a722-61ff6340e745\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"79140ecf-e43e-42aa-a722-61ff6340e745\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"fc77568a-1146-46dd-94d7-13f9bbd43b7d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"fc77568a-1146-46dd-94d7-13f9bbd43b7d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6497bed2-5d51-4dec-ab5b-9fb556f49f92\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6497bed2-5d51-4dec-ab5b-9fb556f49f92\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"232cdf41-3012-4c9b-bb4c-22a18a359789\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"232cdf41-3012-4c9b-bb4c-22a18a359789\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7cfedea7-20f2-4d8f-8e2e-fca92b0f1833\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7cfedea7-20f2-4d8f-8e2e-fca92b0f1833\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e3152604-ab4e-4274-92b1-b9904ddf3e0d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e3152604-ab4e-4274-92b1-b9904ddf3e0d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"39b07c42-bde3-416d-b66d-3f9fb5c970de\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"39b07c42-bde3-416d-b66d-3f9fb5c970de\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7f98fadc-a7bd-4163-996f-b56e51a29213\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7f98fadc-a7bd-4163-996f-b56e51a29213\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7c9e0d0f-ab16-4168-b5bf-81afe66f032a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7c9e0d0f-ab16-4168-b5bf-81afe66f032a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 10900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"bb52dca3-9c35-4df2-9030-df73b9ae353f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"bb52dca3-9c35-4df2-9030-df73b9ae353f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a279edbe-6bb9-4aa8-8acc-f86fc889b270\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a279edbe-6bb9-4aa8-8acc-f86fc889b270\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2bca17bb-7886-4f6d-94e1-835886936601\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2bca17bb-7886-4f6d-94e1-835886936601\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1c53a997-7759-4c7b-9d2a-5825b9525a0f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1c53a997-7759-4c7b-9d2a-5825b9525a0f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f045c218-fde5-43d0-85ea-005699b7cebb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f045c218-fde5-43d0-85ea-005699b7cebb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5447b95c-b366-4e32-8b1b-d5d9d9cbb405\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5447b95c-b366-4e32-8b1b-d5d9d9cbb405\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f170100c-0a26-4582-8e2f-e15b3f4c5bf3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f170100c-0a26-4582-8e2f-e15b3f4c5bf3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d2e7fd82-7395-4b7d-8ce6-e0f76c42d540\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d2e7fd82-7395-4b7d-8ce6-e0f76c42d540\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"4867f807-c42a-4daf-8aec-df984121664f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"4867f807-c42a-4daf-8aec-df984121664f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f62419cd-b1da-46ce-ab95-16324955dc4e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f62419cd-b1da-46ce-ab95-16324955dc4e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 11900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"043fa511-80c8-4be9-aa4f-8dfaafe680cf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"043fa511-80c8-4be9-aa4f-8dfaafe680cf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d935e904-5e2f-4344-af80-008d1ff31cfc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d935e904-5e2f-4344-af80-008d1ff31cfc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"42c10e15-92b8-4939-b721-7a3e8e641884\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"42c10e15-92b8-4939-b721-7a3e8e641884\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"644c17e4-2b08-46ef-8e3e-83bb3904ebca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"644c17e4-2b08-46ef-8e3e-83bb3904ebca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"71e8cfef-036c-445a-87b4-a6454596654e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"71e8cfef-036c-445a-87b4-a6454596654e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ac758527-eaca-43a1-b23a-5eaaea9ec414\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ac758527-eaca-43a1-b23a-5eaaea9ec414\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9dd23dd6-34c3-474e-b8a7-4b6ed605bd7c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9dd23dd6-34c3-474e-b8a7-4b6ed605bd7c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"03360fd3-d27e-456b-bd9a-5c1c6bda2dca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"03360fd3-d27e-456b-bd9a-5c1c6bda2dca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9273bfab-e740-4c9e-8677-9638f8bcf540\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9273bfab-e740-4c9e-8677-9638f8bcf540\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"472dfda1-ce17-429e-8ba4-7f590c352d3a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"472dfda1-ce17-429e-8ba4-7f590c352d3a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 12900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"157180f6-3056-412d-ae0e-192b8fe97372\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"157180f6-3056-412d-ae0e-192b8fe97372\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1966df2a-28b7-4d72-935e-912059840496\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1966df2a-28b7-4d72-935e-912059840496\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"70bcca7e-b702-486b-93e6-b6da8f8486e9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"70bcca7e-b702-486b-93e6-b6da8f8486e9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d19b8249-d1f5-4358-a576-c23d1d56a04d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d19b8249-d1f5-4358-a576-c23d1d56a04d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"31283494-d5aa-46d5-937f-b58599c42ac8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"31283494-d5aa-46d5-937f-b58599c42ac8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c7b27bcf-2fcd-4f7c-9ed4-9ab6371132f5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c7b27bcf-2fcd-4f7c-9ed4-9ab6371132f5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5b600e09-040c-4ad6-9a41-5df9c307db6c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5b600e09-040c-4ad6-9a41-5df9c307db6c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"4d5cf5c8-121f-4268-8f3a-23b4c83f7126\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"4d5cf5c8-121f-4268-8f3a-23b4c83f7126\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"75dbb0b4-ea6b-441d-b600-afd22c4f351e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"75dbb0b4-ea6b-441d-b600-afd22c4f351e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"df250cd7-c9c8-4489-ba53-0289a0b24d35\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"df250cd7-c9c8-4489-ba53-0289a0b24d35\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 13900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"10c99d38-7665-4015-9939-23301e9d61b7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"10c99d38-7665-4015-9939-23301e9d61b7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6e28d767-565a-49cd-8f27-4b3b14a38d9a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6e28d767-565a-49cd-8f27-4b3b14a38d9a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"88d630f3-be9f-41ed-bf5a-ac1059f31c30\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"88d630f3-be9f-41ed-bf5a-ac1059f31c30\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c52eab40-5664-4c8e-bc3d-3574a578dc12\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c52eab40-5664-4c8e-bc3d-3574a578dc12\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a28f793b-f88f-4da0-99f2-1333bea88d35\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a28f793b-f88f-4da0-99f2-1333bea88d35\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"06b06a50-d07b-4776-9fdd-d4b594181987\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"06b06a50-d07b-4776-9fdd-d4b594181987\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ea48d10d-014e-4054-8b06-cd65625a8367\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ea48d10d-014e-4054-8b06-cd65625a8367\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f7d3e5c1-2d8d-41f3-aa92-96cdafccf0e9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f7d3e5c1-2d8d-41f3-aa92-96cdafccf0e9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"12f60e54-8f38-4249-bcf0-e76b24b16568\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"12f60e54-8f38-4249-bcf0-e76b24b16568\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"579a84e5-f421-424a-908f-0a8a01d71838\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"579a84e5-f421-424a-908f-0a8a01d71838\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 14900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"030cdde0-3bd1-4904-a559-3f3395442589\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"030cdde0-3bd1-4904-a559-3f3395442589\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"901afa06-cf3a-4fa3-93cc-9054dab8ac1a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"901afa06-cf3a-4fa3-93cc-9054dab8ac1a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1f6f5fe6-4120-4611-bb06-df58060613be\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1f6f5fe6-4120-4611-bb06-df58060613be\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e5b0e5a2-cf44-411b-ad4e-a492006ade1f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e5b0e5a2-cf44-411b-ad4e-a492006ade1f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"45fc944c-9fcb-4ed9-b408-5fe25c2cc86b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"45fc944c-9fcb-4ed9-b408-5fe25c2cc86b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"468ad57f-fd40-41e1-bfe2-90453d215c19\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"468ad57f-fd40-41e1-bfe2-90453d215c19\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c0ff3afa-30fc-4261-ae20-4b2ce6aeacd7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c0ff3afa-30fc-4261-ae20-4b2ce6aeacd7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1be061a1-802b-4d6a-a6d3-4d3730384290\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1be061a1-802b-4d6a-a6d3-4d3730384290\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"73d6760a-f934-410c-8cde-176672f16923\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"73d6760a-f934-410c-8cde-176672f16923\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"cd6ada33-99ef-4692-9bda-1f10e53a8030\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"cd6ada33-99ef-4692-9bda-1f10e53a8030\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 15900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"49c5ecfb-8eba-42fa-a05c-dbf06c402582\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"49c5ecfb-8eba-42fa-a05c-dbf06c402582\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"56eb62b3-8731-4749-903a-3d2456524268\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"56eb62b3-8731-4749-903a-3d2456524268\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"86f167a5-f8a4-4788-8cd8-be30212acbb2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"86f167a5-f8a4-4788-8cd8-be30212acbb2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"921b4763-28ad-4ef5-ac6d-34803ec04559\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"921b4763-28ad-4ef5-ac6d-34803ec04559\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b581b7ca-026e-46c6-8a05-e660f226b3af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b581b7ca-026e-46c6-8a05-e660f226b3af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5fcb09cd-4bbb-4d4c-8499-fca909634b90\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"5fcb09cd-4bbb-4d4c-8499-fca909634b90\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9e980346-39bc-47cc-a6be-cf8b57132506\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"9e980346-39bc-47cc-a6be-cf8b57132506\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"919cb0c1-81e5-41be-9a82-c1bf2974042c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"919cb0c1-81e5-41be-9a82-c1bf2974042c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"8001c3fc-becc-4341-962e-0bc8c8749e1b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"8001c3fc-becc-4341-962e-0bc8c8749e1b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f9591ce9-e055-403e-8660-715729c03e02\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f9591ce9-e055-403e-8660-715729c03e02\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 16900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c980c583-6244-4701-9654-94872ca674b2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c980c583-6244-4701-9654-94872ca674b2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6c28b00a-effa-4706-866d-f36d7aa07297\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6c28b00a-effa-4706-866d-f36d7aa07297\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1d5c2439-9d78-4261-a7c6-20146915f310\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"1d5c2439-9d78-4261-a7c6-20146915f310\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e1b7b61b-ad31-48a4-b370-6fdf68ecde9c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e1b7b61b-ad31-48a4-b370-6fdf68ecde9c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f7db61ca-03b1-464e-a5b6-a032e169bddc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"f7db61ca-03b1-464e-a5b6-a032e169bddc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ad6bafa6-094c-4d08-a763-068abf72b3c0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ad6bafa6-094c-4d08-a763-068abf72b3c0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6c336494-768c-4e90-98f8-44e07ccc647d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"6c336494-768c-4e90-98f8-44e07ccc647d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"006abc42-bf65-4940-94e6-d5ca36ee82f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"006abc42-bf65-4940-94e6-d5ca36ee82f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"39ab7730-91b8-4fab-9545-871c203e1fa9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"39ab7730-91b8-4fab-9545-871c203e1fa9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"92fc621c-98cc-41c3-8f69-844dba150115\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"92fc621c-98cc-41c3-8f69-844dba150115\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 17900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"89b47941-4cf5-4353-abf4-83628380c28a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"89b47941-4cf5-4353-abf4-83628380c28a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c6ab491a-78a0-401c-b141-d6e97496d645\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"c6ab491a-78a0-401c-b141-d6e97496d645\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ef241e3f-e78c-4e60-a812-dbfc46bbe975\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"ef241e3f-e78c-4e60-a812-dbfc46bbe975\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a055bde3-d467-4f4c-8b1b-85b242624946\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a055bde3-d467-4f4c-8b1b-85b242624946\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e0e83e67-c38d-438a-a282-7962d29bec7b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e0e83e67-c38d-438a-a282-7962d29bec7b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a6777c5e-33ee-4a3a-a309-d7f229c600d3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a6777c5e-33ee-4a3a-a309-d7f229c600d3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"214d174b-ef0d-49d3-b989-0e3fc2031b96\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"214d174b-ef0d-49d3-b989-0e3fc2031b96\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e105cd3f-0804-4c9e-b468-663a42d2ee89\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"e105cd3f-0804-4c9e-b468-663a42d2ee89\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"fb3cdd25-6ae0-4ef1-85bb-e0f938bfd7ef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"fb3cdd25-6ae0-4ef1-85bb-e0f938bfd7ef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"76bcd3bd-6141-4590-85db-dca0a1453bd2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"76bcd3bd-6141-4590-85db-dca0a1453bd2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 18900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b401be55-5599-45fe-8373-e524fe53ce02\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b401be55-5599-45fe-8373-e524fe53ce02\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"3c4191c3-cfc9-49c8-af4e-627e15dc5cda\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"3c4191c3-cfc9-49c8-af4e-627e15dc5cda\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"92f6ed07-ab54-4ea3-9d91-b4f2a621ffb9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"92f6ed07-ab54-4ea3-9d91-b4f2a621ffb9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"06ee6704-859f-48bd-89c9-a2c8764d56bc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"06ee6704-859f-48bd-89c9-a2c8764d56bc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"99ddba3d-2707-4eb6-a758-592199527d7d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"99ddba3d-2707-4eb6-a758-592199527d7d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"bda2bc62-50ce-45fb-b291-a631f8cf905a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"bda2bc62-50ce-45fb-b291-a631f8cf905a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"dca2b655-f233-476e-93c0-661a8b6b9f7a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"dca2b655-f233-476e-93c0-661a8b6b9f7a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2a006e1e-dfdd-4ccd-81a5-c202dc8e77e1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2a006e1e-dfdd-4ccd-81a5-c202dc8e77e1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7c030348-34a4-4fd0-8792-f465bfcf344a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"7c030348-34a4-4fd0-8792-f465bfcf344a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"0ac7cc3e-36b1-4656-8460-64bb50ee2de8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"0ac7cc3e-36b1-4656-8460-64bb50ee2de8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 19900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"3e0af37a-31d7-4f4b-87a8-78ded32cec77\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"3e0af37a-31d7-4f4b-87a8-78ded32cec77\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d92c4f41-f055-42e9-9175-393bc2426c46\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d92c4f41-f055-42e9-9175-393bc2426c46\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2d6877e2-58bb-415b-8d04-8b48832e9d52\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"2d6877e2-58bb-415b-8d04-8b48832e9d52\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20200
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d24e75d7-aee6-466e-b7ba-6fb928c5d656\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d24e75d7-aee6-466e-b7ba-6fb928c5d656\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20300
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"94e21f62-356f-453c-88e0-0158d90dd175\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"94e21f62-356f-453c-88e0-0158d90dd175\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20400
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a486cc24-5c7b-4dbd-b81b-58f0a2edf9fa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a486cc24-5c7b-4dbd-b81b-58f0a2edf9fa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20500
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"654fe321-0394-401f-b7fb-c24147de8e4d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"654fe321-0394-401f-b7fb-c24147de8e4d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20600
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"10d700a5-334f-4bea-a470-a0e8ff86a756\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"10d700a5-334f-4bea-a470-a0e8ff86a756\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20700
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"cd555db1-1d4e-4cdc-9501-835067576bb7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"cd555db1-1d4e-4cdc-9501-835067576bb7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20800
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b9c55867-d06c-4bb1-89b6-9834b31b64ba\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"b9c55867-d06c-4bb1-89b6-9834b31b64ba\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 20900
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a4bc665c-7874-4664-bf45-63edd2630825\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"a4bc665c-7874-4664-bf45-63edd2630825\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 21000
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"08bbfb73-e547-46fe-9a27-6c6d0c8c40af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"08bbfb73-e547-46fe-9a27-6c6d0c8c40af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 21100
}
{
  "sandboxLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d0acf902-c28e-4a70-8dcb-5bc74f9af882\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"cannot unpack non-iterable Trade object\", \"errorType\": \"TypeError\", \"requestId\": \"d0acf902-c28e-4a70-8dcb-5bc74f9af882\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 211, in run\\n    self.handle_avg_pos_val(traderData, product, curr_pos, state.own_trades[product])\\n\", \"  File \\\"/var/task/trader.py\\\", line 625, in handle_avg_pos_val\\n    for price, amount, _ in last_trades:\\n\"]}",
  "timestamp": 21200
}
{
  "sandboxLog": "Lambda errors have reached maximum value for submission 59c16145-e0e0-4b26-a36a-0bae92e2f4bd",
  "lambdaLog": null,
  "timestamp": 27575
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss
-2;0;AMETHYSTS;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
-2;0;STARFRUIT;5002;1;4997;31;;;5003;31;;;;;5002.5;0.0
-2;100;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
-2;100;STARFRUIT;4997;24;;;;;5003;2;5004;22;;;5000.0;0.0
-2;200;STARFRUIT;4997;2;4996;20;;;5003;20;;;;;5000.0;0.0
-2;200;AMETHYSTS;9995;20;;;;;10005;20;;;;;10000.0;0.0
-2;300;AMETHYSTS;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
-2;300;STARFRUIT;4996;31;;;;;5003;31;;;;;4999.5;0.0
-2;400;AMETHYSTS;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
-2;400;STARFRUIT;4995;27;;;;;5002;27;;;;;4998.5;0.0
-2;500;AMETHYSTS;9995;30;;;;;10002;4;10005;30;;;9998.5;0.0
-2;500;STARFRUIT;4996;30;;;;;5003;30;;;;;4999.5;0.0
-2;600;STARFRUIT;4999;5;4997;6;4996;25;5003;25;;;;;5001.0;0.0
-2;600;AMETHYSTS;10000;5;9995;25;;;10005;25;;;;;10002.5;0.0
-2;700;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;700;STARFRUIT;4997;2;4996;23;;;5003;23;;;;;5000.0;0.0
-2;800;AMETHYSTS;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
-2;800;STARFRUIT;4997;30;;;;;5003;1;5004;29;;;5000.0;0.0
-2;900;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
-2;900;STARFRUIT;4997;23;;;;;5003;1;5004;22;;;5000.0;0.0
-2;1000;STARFRUIT;4996;26;;;;;5001;6;5003;26;;;4998.5;0.0
-2;1000;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;0.0
-2;1100;STARFRUIT;4998;6;4997;26;;;5004;26;;;;;5001.0;0.0
-2;1100;AMETHYSTS;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0




Trade History:
null